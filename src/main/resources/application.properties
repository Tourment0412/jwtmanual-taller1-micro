spring.application.name=jwtgeneratortaller1
info.app.name=jwtgeneratortaller1
info.app.version=1.0.0

# Configuracion de Docker Compose (por defecto false, se activa en Docker)
spring.docker.compose.enabled=${DOCKER_COMPOSE_ENABLED:false}

# Configuracion de PostgreSQL
# En desarrollo local: localhost:5432
# En Docker: postgres:5432
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/mydb}
spring.datasource.username=${DATASOURCE_USERNAME:user}
spring.datasource.password=${DATASOURCE_PASSWORD:pass}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway (deshabilitado por defecto para compatibilidad con PostgreSQL 15.14)
spring.flyway.enabled=${FLYWAY_ENABLED:false}

# Configuracion de correo
simplejavamail.smtp.host=smtp.gmail.com
simplejavamail.smtp.port=587
simplejavamail.smtp.username=tiendasana74@gmail.com
simplejavamail.smtp.password=jejb oomj ubpq ujvg
simplejavamail.smtp.transport.strategy=SMTP_TLS
spring.mail.properties.mail.smtp.auth=true
simplejavamail.debug=true

# Configuracion de logging (m√°s detallado en Docker)
logging.level.org.hibernate.SQL=${HIBERNATE_SQL_LOG:INFO}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_BINDER_LOG:INFO}
logging.level.com.uniquindio.archmicroserv=${APP_LOG_LEVEL:INFO}
logging.level.org.springframework.amqp=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_AMQP:INFO}
logging.level.org.springframework.rabbit=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_RABBIT:INFO}

# Configuracion JWT
jwt.secret=${JWT_SECRET:secretsecretsecretsecretsecretsecretsecretsecret}
jwt.expiration=${JWT_EXPIRATION:3600}
jwt.issuer=${JWT_ISSUER:ingesis.uniquindio.edu.co}

# Configuracion del pool de conexiones HikariCP
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Conexion a RabbitMQ
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=domain_user
spring.rabbitmq.password=domain_pass
spring.rabbitmq.virtual-host=foro
spring.rabbitmq.publisher-confirm-type=${SPRING_RABBITMQ_PUBLISHER_CONFIRM_TYPE:simple}
spring.rabbitmq.publisher-returns=${SPRING_RABBITMQ_PUBLISHER_RETURNS:true}

# Configuracion de Actuator y Health Checks
# Exponer solo los endpoints de health (no management/actuator)
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
# Mostrar detalles completos de health checks
management.endpoint.health.show-details=always
# Habilitar probes de Kubernetes (liveness y readiness)
management.endpoint.health.probes.enabled=true
# Grupo de health checks para readiness
management.endpoint.health.group.readiness.include=database,rabbitmq
# Grupo de health checks para liveness
management.endpoint.health.group.liveness.include=application
