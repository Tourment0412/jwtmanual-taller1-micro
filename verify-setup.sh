#!/bin/bash

echo "üîç Verificando configuraciones de Jenkins y SonarQube..."

# Verificar que Jenkins est√© funcionando
echo "üìã Verificando Jenkins..."
JENKINS_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8083)
if [ "$JENKINS_STATUS" = "200" ]; then
    echo "‚úÖ Jenkins est√° funcionando (puerto 8083)"
else
    echo "‚ùå Jenkins no est√° accesible"
    exit 1
fi

# Verificar que SonarQube est√© funcionando
echo "üìã Verificando SonarQube..."
SONAR_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9001)
if [ "$SONAR_STATUS" = "200" ]; then
    echo "‚úÖ SonarQube est√° funcionando (puerto 9001)"
else
    echo "‚ö†Ô∏è  SonarQube est√° deshabilitado temporalmente (se agregar√° despu√©s)"
fi

# Verificar que el servicio de dominio est√© funcionando
echo "üìã Verificando servicio de dominio..."
DOMAIN_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8081/actuator/health)
if [ "$DOMAIN_STATUS" = "200" ]; then
    echo "‚úÖ Servicio de dominio est√° funcionando (puerto 8081)"
else
    echo "‚ö†Ô∏è  Servicio de dominio no est√° accesible (esto es normal si no se ha iniciado)"
fi

echo ""
echo "üéØ Configuraciones verificadas:"
echo "   ‚Ä¢ Jenkins: http://localhost:8083"
echo "   ‚Ä¢ SonarQube: http://localhost:9001"
echo "   ‚Ä¢ Servicio de dominio: http://localhost:8081"
echo ""
echo "üìù Pr√≥ximos pasos:"
echo "   1. Acceder a Jenkins y verificar que el job 'jwtmanual-pipeline' est√© creado"
echo "   2. Ejecutar el pipeline para probar la integraci√≥n completa"
echo "   3. Verificar reportes de pruebas y calidad de c√≥digo"
